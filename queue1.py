##### 식당 입구 대기 줄 #####
# (문제) 여러 명의 학생이 식사하기 위해 학교 식당을 향해 달리고 있다.
# 학교 식당에 도착한 학생은 식당 입구에 줄을 서서 대기한다. 학교 식당에 먼저 도착한 학생이
# 나중에 도착한 학생보다 식당 입구의 앞쪽에 대기한다. 식사는 1인분씩 준비된다.
# 식사 1인분이 준비되면 식당 입구의 맨 앞에 대기중인 학생1명이 식당안으로 들어가서 식사한다.
# 식사를 시작한 학생은 항상 식사를 마친다. 학생이 학교 식당에 도착하고 식사가 준비되는 n개의 정보가 저장된 A가 주어진다
# A에 저장된 첫번째 정보부터 n번째 정보까지 순서대로 처리한 다음 식당 입구에 줄을 서서 대기하는 학생수가 되었던 순간의 학생수와
# 이때 식당 입구의 맨 뒤에 대기 중인 학생의 번호를 출력하자. 대기하는 학생수가 최대인 경우가 여러번이라면 맨 뒤에 줄 서 있는 학생의 번호가 
# 가장 작은 경우를 출력하자.
# A에 저장된 n개의 정보는 아래 두가지 유형으로 구분된다. 첫번째가 유형 1, 두번째가 유형 2이다.
# - 1 a: 학생 번호가 양의 정수 a인 학생 1명이 식당에 도착하여 식당 입구의 맨 뒤에 줄을 서기 시작한다.
# - 2: 식사 1인분이 준비되어 식당 입구의 맨 앞에서 대기중인 학생 1명이 식사를 시작한다.
# 식사 1인분이 준비될 때는 식당 입구에서 대기 중인 학생이 항상 존재한다. 식당 입구에 줄을 서서 대기하였으나 식사가 준비 안된 학생은 식사를 못한다.
# [입력] 첫번째 줄에 n이 주어진다. 다음줄부터 n개의 줄을 걸쳐 한 줄에 하나의 정보가 주어진다. 주어지는 정보는 유형 1, 2중 하나이다.
# [출력] 첫번째 정보부터 n번째 정보까지 순서대로 처리한 다음, 식당 입구에 줄을 서서 대기하는 학생 수가 최대가 되었던 순간의 학생 수와 이때 
# 식당입구의 맨 뒤에 대기중인 학생의 번호를 빈칸을 사이에 두고 순서대로 출력한다. 대기하는 학생 수가 최대인 경우가 여러번이라면 맨 뒤에 줄 서있는 
# 학생의 번호가 가장 작은 경우를 출력한다.

from  collections import deque
def solution(n,A):
    answer = [0,0]
    q = deque()
    for info in A:
        if info[0] == 1:
            q.append(info[1])
            if answer[0] < len(q) or (answer[0] == len(q) and answer[1] > info[1]):
                answer = [len(q),info[1]]
        else:
            q.popleft()
    return answer
n = int(input())
A = list(list(map(int, input().split())) for _ in range(n))
B = solution(n,A)
print(B[0],B[1])

